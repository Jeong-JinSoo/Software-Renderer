노말벡터
표면(surface)의 기울기(orientation), 즉 그 표면에 수직인 단위 벡터

용도
- 면의 방향 판단 (앞면,뒷면 분리)
- 조명 계산 (램버트, 블린-퐁 등)
- 텍스처 매핑 보정(e.g, 노말맵)

면 노말(Face Normal)계산
1. 삼각형의 세 정점: A, B, C
2. 두 변(edge)벡터를 구한다.
	e = B-A, f = C-A
3. 외적(cross product)으로부터 수직 벡터 얻기
	n = e * f
4. 단위 벡터화(nomalize)
	r = n/||n||
	주의 : A -> B -> C -> 순서가 반시계(CCW)면 외적 방향이 카메라쪽을 향하고, 시계(CW)면
	반대방향이 된다.

정점 노말(Nertex Normal)
	플렛 셰이딩(flat shading)
	- 각 면(face) 하나당 하나의 노말만 사용 -> 계단 현상
	스무스 셰이딩
	- 각 정점에 인접한 면들의 노말을 평균하여 넣음
	1. 인접 면 노말 합산
	2. 정규화
		-> 부드러운 곡면 처럼 보이게 함

노말의 변환(Transform)
	월드 공간으로 넘길 때 모델 매트릭스로 위치만 변환하면 안되고,
	- 모델 행렬 M에 대해 노말은 nw = (m^-1)^T nm 로 변환해야 기울기가 보존된다.
	- 뷰 투영 단계에선 보통 노말은 뷰 행렬까지만 변환하고, 정규화 상태로 프래그먼트 셰이더에 넘긴다.

조명(Shading)에서의 노말 활용
	램버트 조명(Lambertian)
		- 광원 방향 L, 노말 N (단위벡터)
		- 디퓨즈 강도 : I = max(N·L, 0)
		- 최종 색: color = I * lightColor * surfaceColor
	블린-퐁(Blinn-Phong)
		- 하프벡터 H = L+V/||L+V||
		- 스펙큘러 I = (max(N·H, 0))^α

래스터라이저 단계에서의 노말 보간
	1. 바리센트릭 좌표 α,β,γ구함
	2. 원근 보정(perspective-correct)보간
		// 식 생략
	3. 정규화 후 셰이딩 계산

디버깅용 노말 시각화
	- 노말 (Nx,Ny, Nz)∈[-1,1]을
		(Nx*0.5+0.5, Ny * 0.5 + 0.5, Nz * 0.5 + 0.5)∈[0,1]로 매핑
	- RGB로 찍어보면 면의 기울기가 색상으로 표현되어 회전 여부, 역항향 노말 문제 등을 직관적으로 파악 가능.

	정리
		1. 노말 = 표면 기울기(단위 수직 벡터)
		2. 계산 = 외적 -> 정규화
		3. 변환 = inverse-transpose 행렬 사용
		4. 보간 = 원근 보정된 바리센트릭 보간 후 정규화
		5. 셰이딩 = N·L, 혹은 노말 직업 RGB 매핑
